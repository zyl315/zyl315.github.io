<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Git的知识点</title>
    <url>/2020/09/26/Git%E7%9A%84%E7%9F%A5%E8%AF%86%E7%82%B9/</url>
    <content><![CDATA[<p>可以查看张雪峰关于git的介绍，<a href="https://www.liaoxuefeng.com/wiki/896043488029600" target="_blank" rel="noopener">地址</a></p>
<h5 id="1-创建git版本库"><a href="#1-创建git版本库" class="headerlink" title="1. 创建git版本库"></a>1. 创建git版本库</h5><p><code>git init</code>   把当前目录变成git可以管理的仓库。</p>
<p><code>git add 1.txt</code>把1.txt这个文件添加到git仓库，一定要在仓库所在的目录下哟！</p>
<p><code>git commit -m &quot;add a file&quot;</code>  把文件提交到仓库，-m 后面输入的是本次提交的说明，可以添加多个后一次性提交。 </p>
<h5 id="2-版本控制"><a href="#2-版本控制" class="headerlink" title="2. 版本控制"></a>2. 版本控制</h5><p><code>git log</code> 查看最近的提交历史的操作记录，由最近到最远排序， 添加<code>--pretty=oneline</code>可以简化查询信息。</p>
<p><code>git reset --hard HEAD^</code>  回退到上一个版本，<code>HEAD</code>是一个指针，指向当前版本，<code>HEAD^</code>表示上一个版本，<code>HEAD^^</code>表示上上个版本， <code>HEAD~100</code>表示上100个版本，可以确定要回退的版本。</p>
<p><code>git reflog</code> 查看操作命令历史，然后使用<code>git reset --hard commit_id</code>回到未来的版本。</p>
<p><code>git status</code> 可以查看当前工作区与暂存区文件提交的状态。</p>
<h5 id="3-工作区与缓存区"><a href="#3-工作区与缓存区" class="headerlink" title="3.工作区与缓存区"></a>3.工作区与缓存区</h5><p><img src="https://www.liaoxuefeng.com/files/attachments/919020037470528/0" alt="img"></p>
<p>使用<code>git add</code>实际上是把文件从工作区添加到暂存区；</p>
<p>使用<code>git commit</code>提交更改，实际上是把暂存区的内容提交到<code>master</code>分支，当我们在创建git版本仓库时，会自动创建一个唯一的<code>master</code>分支。</p>
<p>在每一次对工作区的文件进行修改后，先<code>git add</code>添加到缓存区，然后在<code>git commit</code> 提交到分支，这样才能实现对版本库里的文件进行更新。</p>
<h5 id="4-仓库文件管理"><a href="#4-仓库文件管理" class="headerlink" title="4.仓库文件管理"></a>4.仓库文件管理</h5><h6 id="管理修改"><a href="#管理修改" class="headerlink" title="管理修改"></a>管理修改</h6><blockquote>
<p><code>git diff Head -- file</code>当前工作区的与版本库里文件的差别。</p>
</blockquote>
<h6 id="撤销修改"><a href="#撤销修改" class="headerlink" title="撤销修改"></a>撤销修改</h6><blockquote>
<p><code>git checkout -- file</code>可以丢弃工作区的修改，即让这个文件回到<code>git commit</code>或者&gt;<code>git add</code>时的状态，<strong>注意，其中的<code>--</code>十分重要，如果去掉就是切换分支的命令了</strong>。</p>
<p>如果文件已经提交到了暂存区<code>git add</code>，想丢弃修改，首先使用<code>git reset Head &gt;&lt;file&gt;</code>命令，然后再使用<code>git checkour -- file</code>。</p>
<p>如果文件已经提交到了版本库里，要撤销本次提交，可以使用版本回退。</p>
</blockquote>
<h6 id="删除文件"><a href="#删除文件" class="headerlink" title="删除文件"></a>删除文件</h6><blockquote>
<p>可以使用Linux命令<code>rm file</code>或者直接在文件管理器中直接把文件删除了，也可以使用命令<code>git rm file</code>.</p>
</blockquote>
<h5 id="5-远程仓库"><a href="#5-远程仓库" class="headerlink" title="5.远程仓库"></a>5.远程仓库</h5><h6 id="添加远程仓库"><a href="#添加远程仓库" class="headerlink" title="添加远程仓库"></a>添加远程仓库</h6><blockquote>
<p><code>git remote add origin &gt;git@github.com:username/***.git</code>关联远程仓库,其中username是自己的github用户名，***为仓库名，可以在GitHub上等代码托管网站自己建立远程仓库。</p>
<p><code>git push -u origin master</code>第一次推送master分支的所有内容。</p>
<p><code>git push origin master</code> 第一次提交后，推送新的修改版本。</p>
<p>其中需要注意SSH有关方面的配置。</p>
</blockquote>
<p>克隆远程仓库</p>
<blockquote>
<p><code>git clone</code>,使用克隆命令，后面可以接仓库的https或SSH地址，例如：<code>git clone git@github.com:username/***.git</code>。</p>
</blockquote>
<h5 id="6-分支管理"><a href="#6-分支管理" class="headerlink" title="6.分支管理"></a>6.分支管理</h5><h6 id="创建与合并分支"><a href="#创建与合并分支" class="headerlink" title="创建与合并分支"></a>创建与合并分支</h6><blockquote>
<p><code>git branch</code>，查看当前分支。</p>
<p><code>git checkoout -b &lt;name&gt;</code>，表示创建分支并切换。</p>
<p>可以等价为两条语句:<code>git branch &lt;name&gt;</code>和<code>git checkout &lt;name&gt;</code>。</p>
<p><code>git checkout &lt;name&gt;</code> ，用来切换分支，但容易与<code>git chechout -- &lt;file&gt;</code>撤销修改命令混淆，最新版的Git可也以使用新的切换分支命令：</p>
<p><code>git switch &lt;name&gt;</code>来切换分支，但Git版本须2.23版本以上，可以使用<code>git update-git-for-windows</code>来更新,速度太慢不推荐。</p>
<p><code>git merge &lt;name&gt;</code>，用于合并指定分支到当前分支。</p>
<p><code>git branch -d &lt;name&gt;</code>, 删除分支。</p>
</blockquote>
<h6 id="解决冲突"><a href="#解决冲突" class="headerlink" title="解决冲突"></a>解决冲突</h6><blockquote>
<p>当Git无法自动合并分支时，就必须首先解决冲突。解决冲突后，再提交，合并完成。</p>
<p>解决冲突就是把Git合并失败的文件手动编辑为我们希望的内容，再提交。</p>
<p><code>git log --graph</code>命令可以看到分支合并图。</p>
</blockquote>
<h6 id="分支管理"><a href="#分支管理" class="headerlink" title="分支管理"></a>分支管理</h6><blockquote>
<p>在分支合并时，大对数情况下采用的是<code>Fast forward</code>模式，在这种模式下，分支删除后就会丢失分支信息，可以采用</p>
<p><code>git merge --no--ff -m &quot;message&quot; &lt;name&gt;</code>, 这种方式会提交一个commit，合并后就会有历史分支，能看出来曾经做过的合并。</p>
<p><img src="https://www.liaoxuefeng.com/files/attachments/919023260793600/0" alt="img"></p>
<p>在实际开发过程中，master分支非常稳定，一般仅用来发布新版本，团队成员的开发一般会推送到dev分支等。</p>
</blockquote>
<h6 id="Bug分支"><a href="#Bug分支" class="headerlink" title="Bug分支"></a>Bug分支</h6><blockquote>
<p>Bug分支，顾名思义为了修复Bug而创建的分支，而当目前的工作还未还未完成，不能提交现在正在工作的分支，可以使用Git的<code>git stash</code>功能，可以把当前的工作现场“保存”下来，等到恢复现场后继续工作。</p>
<p><code>git stash lsit</code> 查看工作现场，恢复工作现场的办法有两个：</p>
<p><code>git stash apply</code> 恢复现场但不删除stash内容，<code>git stash drop</code>来删除stash中的内容。</p>
<p><code>git stash pop</code>可以回到工作现场，恢复的同时把stash内容删除。</p>
<p>当个多个分支上存在bug时，可以使用命令<code>git cherry-pick &lt;commit_id&gt;</code>，把bug提交到修改“复制”</p>
<p>到当前分支，避免重复劳动。</p>
</blockquote>
<h6 id="Feature分支"><a href="#Feature分支" class="headerlink" title="Feature分支"></a>Feature分支</h6><blockquote>
<p>开发一个新的功能，最好是新建一个分支，如果丢弃一个没有被合并的分支，可以使用命令</p>
<p><code>git branch -d &lt;name&gt;</code>强行删除。</p>
</blockquote>
<h6 id="多人协作"><a href="#多人协作" class="headerlink" title="多人协作"></a>多人协作</h6><blockquote>
<p>从远程仓库克隆时，实际上是对应本地master分支与远程仓库的master分支，远程仓库的默认名是origin。</p>
<p><code>git remote</code>，查看远程仓库信息。<br>推送分支:<br><code>git push origin &lt;branch_name&gt;</code>，在推送中可能出现失败，本地提交有冲突，先使用<code>git pull</code>从远程仓库拉取最新的提交，然后在本地解决冲突，再推送。</p>
</blockquote>
<h6 id="Rebase"><a href="#Rebase" class="headerlink" title="Rebase"></a>Rebase</h6><blockquote>
<p><code>git rebase</code>可以把本地未push的分叉提交历史整理成直线，可以使得我们在查看历史提交的变化时更容易，因为分叉的提交需要三方对比。</p>
</blockquote>
<h5 id="7-标签管理"><a href="#7-标签管理" class="headerlink" title="7.标签管理"></a>7.标签管理</h5><p>标签可以使得查找commit更加容易，不在需要记得commit id，tag与某个commit绑定。</p>
<p><code>git tag &lt;tagname&gt;</code>用于新建一个标签，默认为<code>HEAD</code>，也可以指定一个commit id；</p>
<p><code>git tag -a &lt;tagname&gt; -m &quot;***&quot;</code>可以指定标签信息；</p>
<p><code>git tag</code>可以查看所有标签。</p>
]]></content>
      <categories>
        <category>版本控制工具</category>
        <category>Git</category>
      </categories>
      <tags>
        <tag>命令</tag>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>跳转测试</title>
    <url>/2020/09/26/%E5%86%85%E9%83%A8%E7%BD%91%E9%A1%B5%E8%B7%B3%E8%BD%AC%E6%B5%8B%E8%AF%95/</url>
    <content><![CDATA[<p><a href="/demo/mobile">慕课手机</a></p>
<p><a href="/demo/live2d">live2D</a></p>
]]></content>
      <categories>
        <category>测试</category>
      </categories>
  </entry>
  <entry>
    <title>WebAPP</title>
    <url>/2020/09/14/WebAPP/</url>
    <content><![CDATA[<h2 id="Web-App-开发相关知识"><a href="#Web-App-开发相关知识" class="headerlink" title="Web App 开发相关知识"></a>Web App 开发相关知识</h2><h4 id="物理像素与CSS像素"><a href="#物理像素与CSS像素" class="headerlink" title="物理像素与CSS像素"></a>物理像素与CSS像素</h4><blockquote>
<p>物理像素(physical pixel ),也可叫做设备像素(dp : device pixel)，与设备的物理特性相关，例如屏幕的分辨率，屏幕大小有关。</p>
</blockquote>
<blockquote>
<p>CSS像素，也可以叫做逻辑像素(logic pixel)，或者设备独立像素(device independent pixel)，实际开发中使用的就是CSS像素。</p>
</blockquote>
<blockquote>
<p>设备像素比(dpr : device pixel ratio), dpr=设备像素/CSS 像素（缩放比是1的情况下）。dpr=1为标清屏，dpr&gt;=2为高清屏。缩放是改变CSS像素。</p>
</blockquote>
<blockquote>
<p>PPI(pixels per inch), 每英寸的物理像素点，也可以叫做dpi (dots per inch)。</p>
</blockquote>
<h4 id="viewport常用写法"><a href="#viewport常用写法" class="headerlink" title="viewport常用写法"></a>viewport常用写法</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, inital-scale=1, user-scalacle=no, maximum-scale=1, minimum-scale=1"</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>其中<code>width=device-width</code>与<code>inital-scale=1</code>实现的效果相同，是的网页在移动端可以正常显示大小，<code>user-scalacle=no</code>与<code>maximum-scale=1,mimimum-scale=1</code>使得用户不能够缩放网页，以免影响布局效果。</p>
]]></content>
      <categories>
        <category>WebApp</category>
      </categories>
      <tags>
        <tag>pixel</tag>
        <tag>viewport</tag>
      </tags>
  </entry>
  <entry>
    <title>CSS3 动画</title>
    <url>/2020/08/11/CSS-animate/</url>
    <content><![CDATA[<h5 id="1-transform"><a href="#1-transform" class="headerlink" title="1 transform"></a>1 transform</h5><p><a href="https://www.w3school.com.cn/cssref/pr_transform.asp" target="_blank" rel="noopener">transform</a> 属性向元素应用 2D 或 3D 转换。该属性允许我们对元素进行旋转、缩放、移动或倾斜<br>例如：旋转 div 元素：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">div</span><br><span class="line">&#123;</span><br><span class="line">transform:rotate(7deg);</span><br><span class="line">-ms-transform:rotate(7deg); 	/* IE 9 */</span><br><span class="line">-moz-transform:rotate(7deg); 	/* Firefox */</span><br><span class="line">-webkit-transform:rotate(7deg); /* Safari 和 Chrome */</span><br><span class="line">-o-transform:rotate(7deg); 	/* Opera */</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="2-transition"><a href="#2-transition" class="headerlink" title="2 transition"></a>2 transition</h5><p><a href="https://www.w3school.com.cn/cssref/pr_transition.asp" target="_blank" rel="noopener">transition</a> 属性是一个简写属性，用于设置四个过渡属性：<br>· transition-property：规定设置过渡效果的 CSS 属性的名称。<br>· transition-duration：规定完成过渡效果需要多少秒或毫秒。<br>· transition-timing-function：规定速度效果的速度曲线。<br>· transition-delay：规定速度效果的速度曲线。</p>
]]></content>
      <categories>
        <category>CSS3</category>
      </categories>
      <tags>
        <tag>animate</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo常用命令</title>
    <url>/2020/08/09/hexo%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<blockquote>
<h3 id="Hexo常用的几个命令"><a href="#Hexo常用的几个命令" class="headerlink" title="Hexo常用的几个命令"></a>Hexo常用的几个命令</h3><h4 id="1-hexo-server"><a href="#1-hexo-server" class="headerlink" title="1. hexo server"></a>1. hexo server</h4><p><code>hexo server</code> ，可简写为 <code>hexo s</code>，启动本地服务器预览，默认地址为<a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a></p>
<h4 id="2-hexo-new"><a href="#2-hexo-new" class="headerlink" title="2. hexo new"></a>2. hexo new</h4><p><code>hexo new</code> 创建一篇新的文章，后接文章名。</p>
<h4 id="3-hexo-generate"><a href="#3-hexo-generate" class="headerlink" title="3. hexo generate"></a>3. hexo generate</h4><p><code>hexo generate</code>，可简写为<code>hexo g</code>，生成静态文件。</p>
<h4 id="4-hexo-clean"><a href="#4-hexo-clean" class="headerlink" title="4. hexo clean"></a>4. hexo clean</h4><p><code>hexo clean</code> 清除缓存文件 (db.json) 和已生成的静态文件 (public)。</p>
<h4 id="5-hexo-deploy"><a href="#5-hexo-deploy" class="headerlink" title="5. hexo deploy"></a>5. hexo deploy</h4><p><code>hexo deploy</code> ，可简写为<code>hexo d</code>，文件生成后立即部署网站</p>
</blockquote>
<blockquote>
<p>详细可访问<a href="https://hexo.io/zh-cn/docs/commands" target="_blank" rel="noopener">Hexo</a>官网查看更多命令。</p>
</blockquote>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>命令</tag>
      </tags>
  </entry>
  <entry>
    <title>第一次使用Markdown编辑器</title>
    <url>/2020/03/07/%E7%AC%AC%E4%B8%80%E6%AC%A1%E4%BD%BF%E7%94%A8Markdown%E7%BC%96%E8%BE%91%E5%99%A8/</url>
    <content><![CDATA[<h1 id="第一次使用Markdown编辑器"><a href="#第一次使用Markdown编辑器" class="headerlink" title="第一次使用Markdown编辑器"></a>第一次使用Markdown编辑器</h1><hr>
<blockquote>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;studio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> a,b;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"c="</span>,a+b);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;<span class="comment">//this is code area. </span></span><br><span class="line"><span class="comment">//男子高校生の日常</span></span><br><span class="line"><span class="comment">//男子高中生的日常</span></span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">myList = &#123;&#125;</span><br><span class="line">fot i <span class="keyword">in</span> myList:</span><br><span class="line">print(i)</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$(<span class="string">"#id"</span>).onclick(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">$(<span class="string">"#name"</span>).val(<span class="string">'zyl'</span>); </span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>我的blog地址：<a href="https://www.zyl315.com" target="_blank" rel="noopener">https://www.zyl315.com</a></p>
<p><a href="http://www.zyl315.com" target="_blank" rel="noopener">blog</a></p>
<p>|  姓名  |年龄| 班级 |<br>|—-|–|–|–|<br>|  Jack  |  20  | 1601 |<br>|  Army  |  21  | 1602 |</p>
<h6 id="使用jsDelivr-GitHub-CND加速的图床例子"><a href="#使用jsDelivr-GitHub-CND加速的图床例子" class="headerlink" title="使用jsDelivr+GitHub CND加速的图床例子"></a>使用jsDelivr+GitHub CND加速的图床例子</h6><img src="https://cdn.jsdelivr.net/gh/zyl315/CDN/img/desk.jpg" title="例子" style="zoom:25%;" />

<img src="https://cdn.jsdelivr.net/gh/zyl315/CDN/img/(0).jpg.webp" style="zoom: 25%;" />



</blockquote>
]]></content>
      <categories>
        <category>测试</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/03/07/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>test_my_title</title>
    <url>/2020/03/06/test-my-title/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>测试</category>
      </categories>
      <tags>
        <tag>test</tag>
      </tags>
  </entry>
</search>
